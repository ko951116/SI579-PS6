{"ast":null,"code":"var _jsxFileName = \"/Users/jiyoon/code/react-rhyme-finder/src/components/TodoItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = props => {\n  const {\n    task,\n    timestamp,\n    remove\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.events.map((eventInstance, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event\",\n        children: [eventInstance.event_title, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-success done\",\n          type: \"button\",\n          onClick: remove,\n          children: \"(save)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/jiyoon/code/react-rhyme-finder/src/components/TodoItem.js"],"names":["TodoItem","props","task","timestamp","remove","events","map","eventInstance","index","event_title"],"mappings":";;;AAAA,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA8BH,KAApC;AAEA,sBACI;AAAA,cACKA,KAAK,CAACI,MAAN,CAAaC,GAAb,CAAiB,CAACC,aAAD,EAAgBC,KAAhB,kBACd;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBAGKD,aAAa,CAACE,WAHnB,eAKI;AACI,UAAA,SAAS,EAAC,qCADd;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,OAAO,EAAEL,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA1BD;;KAAMJ,Q;AA4BN,eAAeA,QAAf","sourcesContent":["const TodoItem = (props) => {\n    const { task, timestamp, remove } = props;\n\n    return (\n        <ul>\n            {props.events.map((eventInstance, index) => (\n                <li>\n                    <div className='event'>\n\n\n                        {eventInstance.event_title}\n\n                        <button\n                            className=\"btn btn-sm btn-outline-success done\"\n                            type=\"button\"\n                            onClick={remove}>\n                            (save)\n                        </button>\n                    </div>\n                </li>\n                )\n            )}\n\n\n        </ul>\n    )\n}\n\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}