{"ast":null,"code":"var _jsxFileName = \"/Users/jiyoon/code/react-rhyme-finder/src/components/EventStarButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import './EventStarButton.css';\nconst EventStarButton = props => {\n  console.log('props', props);\n  const {\n    tossedOverIsStarred,\n    handMeDownSetStarStateFunction,\n    setStarredEvents,\n    title\n  } = props;\n\n  const getStarMessage = () => {\n    if (tossedOverIsStarred) {\n      return 'U GOT STAR';\n    } else {\n      return 'ADD STAR';\n    }\n  };\n\n  const starButtonHandler = e => {\n    setStarredEvents(previousList => {\n      // if tossedOverIsStarred is TRUE, we are about to un-star it.\n      // remove the item from the list.\n      if (tossedOverIsStarred) {\n        return previousList.filter(value => value !== title);\n      } else {\n        // Would also work\n        // previousList.push(title)\n        // return previousList\n        return [...previousList, title];\n      }\n    });\n    props.handMeDownSetStarStateFunction(previousValue => {\n      return !previousValue;\n    }); // setIsStarred(true); //이렇게 하면 클릭하면 무조건 U GOT STAR 로 바뀌고, 클리커블 하지 않음. 무조건 true 만 리턴하기 때문.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: starButtonHandler,\n    className: tossedOverIsStarred ? 'starred' : 'not-sarred',\n    children: [\"\\u2B50\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getStarMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EventStarButton;\nexport default EventStarButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventStarButton\");","map":{"version":3,"sources":["/Users/jiyoon/code/react-rhyme-finder/src/components/EventStarButton.js"],"names":["EventStarButton","props","console","log","tossedOverIsStarred","handMeDownSetStarStateFunction","setStarredEvents","title","getStarMessage","starButtonHandler","e","previousList","filter","value","previousValue"],"mappings":";;;AAAA;AAEA,MAAMA,eAAe,GAAIC,KAAD,IAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,QAAM;AAACG,IAAAA,mBAAD;AAAsBC,IAAAA,8BAAtB;AAAsDC,IAAAA,gBAAtD;AAAwEC,IAAAA;AAAxE,MAAiFN,KAAvF;;AAEA,QAAMO,cAAc,GAAG,MAAM;AACzB,QAAGJ,mBAAH,EAAwB;AACpB,aAAO,YAAP;AACH,KAFD,MAEM;AACF,aAAO,UAAP;AACH;AACJ,GAND;;AAQA,QAAMK,iBAAiB,GAAIC,CAAD,IAAO;AAC7BJ,IAAAA,gBAAgB,CAAEK,YAAD,IAAkB;AAC/B;AACA;AACA,UAAIP,mBAAJ,EAAyB;AACrB,eAAOO,YAAY,CAACC,MAAb,CAAqBC,KAAD,IAAWA,KAAK,KAAKN,KAAzC,CAAP;AACH,OAFD,MAGK;AACD;AACA;AACA;AACA,eAAO,CAAE,GAAGI,YAAL,EAAmBJ,KAAnB,CAAP;AACH;AACJ,KAZe,CAAhB;AAcAN,IAAAA,KAAK,CAACI,8BAAN,CAAsCS,aAAD,IAAmB;AACpD,aAAO,CAACA,aAAR;AACH,KAFD,EAf6B,CAmB7B;AACH,GApBD;;AAsBA,sBACI;AAAQ,IAAA,OAAO,EAAEL,iBAAjB;AAAoC,IAAA,SAAS,EAAEL,mBAAmB,GAAG,SAAH,GAAe,YAAjF;AAAA,sCACK;AAAA,gBAAMI,cAAc;AAApB;AAAA;AAAA;AAAA;AAAA,YADL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCD;;KAAMR,e;AA0CN,eAAeA,eAAf","sourcesContent":["// import './EventStarButton.css';\n\nconst EventStarButton = (props) => {\n    console.log('props', props)\n\n    const {tossedOverIsStarred, handMeDownSetStarStateFunction, setStarredEvents, title} = props;\n\n    const getStarMessage = () => {\n        if(tossedOverIsStarred) {\n            return 'U GOT STAR'\n        }else {\n            return 'ADD STAR'\n        }\n    };\n\n    const starButtonHandler = (e) => {\n        setStarredEvents((previousList) => {\n            // if tossedOverIsStarred is TRUE, we are about to un-star it.\n            // remove the item from the list.\n            if (tossedOverIsStarred) {\n                return previousList.filter((value) => value !== title);\n            }\n            else {\n                // Would also work\n                // previousList.push(title)\n                // return previousList\n                return [ ...previousList, title];\n            }\n        });\n\n        props.handMeDownSetStarStateFunction((previousValue) => {\n            return !previousValue;\n        });\n\n        // setIsStarred(true); //이렇게 하면 클릭하면 무조건 U GOT STAR 로 바뀌고, 클리커블 하지 않음. 무조건 true 만 리턴하기 때문.\n    };\n\n    return (\n        <button onClick={starButtonHandler} className={tossedOverIsStarred ? 'starred' : 'not-sarred'}>\n            ⭐<div>{getStarMessage()}</div>\n        </button>\n    );\n}\n\nexport default EventStarButton;"]},"metadata":{},"sourceType":"module"}