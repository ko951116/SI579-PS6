{"ast":null,"code":"var _jsxFileName = \"/Users/jiyoon/code/react-rhyme-finder/src/components/EventStarButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import './EventStarButton.css';\nconst EventStarButton = props => {\n  const {\n    handMeDownSetStarStateFunction,\n    setStarredEvents,\n    title\n  } = props;\n\n  const getStarMessage = () => {\n    return '(save)';\n  };\n\n  const starButtonHandler = e => {\n    setStarredEvents(previousList => {\n      return [...previousList, title];\n    }); // props.handMeDownSetStarStateFunction((previousValue) => {\n    //     return !previousValue;\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: starButtonHandler,\n    className: \"btn btn-sm btn-outline-success done\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getStarMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EventStarButton;\nexport default EventStarButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventStarButton\");","map":{"version":3,"sources":["/Users/jiyoon/code/react-rhyme-finder/src/components/EventStarButton.js"],"names":["EventStarButton","props","handMeDownSetStarStateFunction","setStarredEvents","title","getStarMessage","starButtonHandler","e","previousList"],"mappings":";;;AAAA;AAEA,MAAMA,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA,8BAAF;AAAkCC,IAAAA,gBAAlC;AAAoDC,IAAAA;AAApD,MAA6DH,KAAnE;;AAEA,QAAMI,cAAc,GAAG,MAAM;AACrB,WAAO,QAAP;AACP,GAFD;;AAIA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BJ,IAAAA,gBAAgB,CAAEK,YAAD,IAAkB;AAC/B,aAAO,CAAE,GAAGA,YAAL,EAAmBJ,KAAnB,CAAP;AACH,KAFe,CAAhB,CAD6B,CAK7B;AACA;AACA;AACH,GARD;;AAUA,sBACI;AAAQ,IAAA,OAAO,EAAEE,iBAAjB;AAAoC,IAAA,SAAS,EAAC,qCAA9C;AAAA,2BACI;AAAA,gBAAMD,cAAc;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBD;;KAAML,e;AAwBN,eAAeA,eAAf","sourcesContent":["// import './EventStarButton.css';\n\nconst EventStarButton = (props) => {\n    const { handMeDownSetStarStateFunction, setStarredEvents, title} = props;\n\n    const getStarMessage = () => {\n            return '(save)'\n    };\n\n    const starButtonHandler = (e) => {\n        setStarredEvents((previousList) => {\n            return [ ...previousList, title];\n        });\n\n        // props.handMeDownSetStarStateFunction((previousValue) => {\n        //     return !previousValue;\n        // });\n    };\n\n    return (\n        <button onClick={starButtonHandler} className=\"btn btn-sm btn-outline-success done\">\n            <div>{getStarMessage()}</div>\n        </button>\n    );\n}\n\nexport default EventStarButton;"]},"metadata":{},"sourceType":"module"}