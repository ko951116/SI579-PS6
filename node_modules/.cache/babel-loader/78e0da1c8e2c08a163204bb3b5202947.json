{"ast":null,"code":"var _jsxFileName = \"/Users/jiyoon/code/react-rhyme-finder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport InputGroup from \"./components/InputGroup\";\nimport TodoItem from \"./components/TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let defaultTodoItems = [{\n    task: 'laundry',\n    created: 1647999964830\n  }];\n  const [todoItems, setTodoItems] = useState(defaultTodoItems);\n\n  const removeTodoItem = created => {\n    setTodoItems(previousTodoItems => {\n      // Keep all items that dont match `timestamp`.\n      const withItemRemoved = previousTodoItems.filter(item => {\n        return item.created !== created;\n      });\n      localStorage.setItem('my-todo-items', JSON.stringify(withItemRemoved));\n      return withItemRemoved;\n    });\n  };\n\n  useEffect(() => {\n    fetch('https://events.umich.edu/day/json').then(response => response.json()).then(json => setTodoItems(Object.values(json)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"row\",\n      children: \"React Rhyme Finder (579 Problem Set 6)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [\"Saved words: \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        setTodoItems: setTodoItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: todoItems.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n        task: item.task,\n        timestamp: item.timestamp,\n        created: item.created,\n        remove: () => removeTodoItem(item.created)\n      }, item.created, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"U4qmCMuY6u1L6cIS6MBg4+L0cr4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jiyoon/code/react-rhyme-finder/src/App.js"],"names":["logo","useState","useEffect","InputGroup","TodoItem","App","defaultTodoItems","task","created","todoItems","setTodoItems","removeTodoItem","previousTodoItems","withItemRemoved","filter","item","localStorage","setItem","JSON","stringify","fetch","then","response","json","Object","values","map","timestamp"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX,MAAIC,gBAAgB,GAAG,CACnB;AACIC,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,OAAO,EAAE;AAFb,GADmB,CAAvB;AAOA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACK,gBAAD,CAA1C;;AAEA,QAAMK,cAAc,GAAIH,OAAD,IAAa;AAChCE,IAAAA,YAAY,CAAEE,iBAAD,IAAuB;AAChC;AACA,YAAMC,eAAe,GAAGD,iBAAiB,CAACE,MAAlB,CAA0BC,IAAD,IAAU;AACvD,eAAOA,IAAI,CAACP,OAAL,KAAiBA,OAAxB;AACH,OAFuB,CAAxB;AAGAQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeN,eAAf,CAAtC;AAEA,aAAOA,eAAP;AACH,KARW,CAAZ;AASH,GAVD;;AAYAX,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWE,IAAD,IAAUb,YAAY,CAACc,MAAM,CAACC,MAAP,CAAcF,IAAd,CAAD,CAFhC;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,iDAAkC;AAAA;AAAA;AAAA;AAAA,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAIb;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPJ,eA0BE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA,gBACGD,SAAS,CAACiB,GAAV,CAAeX,IAAD,iBACX,QAAC,QAAD;AACI,QAAA,IAAI,EAAEA,IAAI,CAACR,IADf;AAEI,QAAA,SAAS,EAAEQ,IAAI,CAACY,SAFpB;AAGI,QAAA,OAAO,EAAEZ,IAAI,CAACP,OAHlB;AAKI,QAAA,MAAM,EAAE,MAAMG,cAAc,CAACI,IAAI,CAACP,OAAN;AALhC,SAISO,IAAI,CAACP,OAJd;AAAA;AAAA;AAAA;AAAA,cADH;AADH;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CH;;GAtEQH,G;;KAAAA,G;AAwET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState, useEffect} from \"react\";\nimport InputGroup from \"./components/InputGroup\";\nimport TodoItem from \"./components/TodoItem\";\n\n\nfunction App() {\n    let defaultTodoItems = [\n        {\n            task: 'laundry',\n            created: 1647999964830,\n        }\n    ];\n\n    const [todoItems, setTodoItems] = useState(defaultTodoItems);\n\n    const removeTodoItem = (created) => {\n        setTodoItems((previousTodoItems) => {\n            // Keep all items that dont match `timestamp`.\n            const withItemRemoved = previousTodoItems.filter((item) => {\n                return item.created !== created\n            });\n            localStorage.setItem('my-todo-items', JSON.stringify(withItemRemoved));\n\n            return withItemRemoved;\n        });\n    }\n\n    useEffect(() => {\n        fetch('https://events.umich.edu/day/json')\n            .then((response) => response.json())\n            .then((json) => setTodoItems(Object.values(json)));\n    }, []);\n\n    return (\n      <main className=\"container\">\n        <h1 className=\"row\">React Rhyme Finder (579 Problem Set 6)</h1>\n\n          <div className=\"row\">\n              <div className=\"col\">Saved words: <span></span></div>\n          </div>\n\n          <section>\n            <InputGroup setTodoItems = {setTodoItems} />\n          </section>\n\n          {/*<div className=\"row\">*/}\n          {/*    <div className=\"input-group col\">*/}\n          {/*        <input className=\"form-control\" type=\"text\" placeholder=\"Enter a word\" id=\"word_input\"/>*/}\n          {/*        <button id=\"show_rhymes\" type=\"button\" className=\"btn btn-primary\">Show rhyming words</button>*/}\n          {/*        <button id=\"show_synonyms\" type=\"button\" className=\"btn btn-secondary\">Show synonyms</button>*/}\n          {/*    </div>*/}\n          {/*</div>*/}\n\n          {/*<div className=\"row\">*/}\n          {/*    <h2 className=\"col\"></h2>*/}\n          {/*</div>*/}\n          {/*<div className=\"output row\">*/}\n          {/*    <output className=\"col\"></output>*/}\n          {/*</div>*/}\n\n        <ul className=\"row\">\n          {todoItems.map((item) =>\n              <TodoItem\n                  task={item.task}\n                  timestamp={item.timestamp}\n                  created={item.created}\n                  key={item.created}\n                  remove={() => removeTodoItem(item.created)}\n              />\n          )}\n        </ul>\n\n\n      </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}